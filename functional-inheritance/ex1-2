<html>
<script>
  'use strict';

  function Machine(power) {
    this._enabled = false;

    var self = this;

    this.enable = function() {
      // используем внешнюю переменную вместо this
      self._enabled = true;
    };

    this.disable = function() {
      self._enabled = false;
    };

  }

  function CoffeeMachine(power) {
    Machine.apply(this, arguments);

    var waterAmount = 0;
    var timerId;

    this.setWaterAmount = function(amount) {
      waterAmount = amount;
    };

    var parentDisable = this.disable;
    this.disable = function() {
        parentDisable(); // теперь можно вызывать как угодно, this не важен, так как он переопределен в переменную self
        clearTimeout(timerId);
      }
    function onReady() {
      alert( 'Кофе готово!' );
    }

    this.run = function() {
      if (!this._enabled) {
        throw new Error("Кофеварка выключена");
      }
      timerId = setTimeout(onReady, 3000);
    };

  }

  var coffeeMachine = new CoffeeMachine(10000);
  coffeeMachine.enable();
  coffeeMachine.run();

  coffeeMachine.disable();

</script>
</html>
